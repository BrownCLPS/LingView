{
  "name": "LingView",
  "version": "1.0.0",
  "description": "For presentation of audio/video/text corpus of texts. Previously using code from [ETST](http://community.village.virginia.edu/etst/).",
  "main": "index.html",
  "dependencies": {
    "babel-core": "^6.25.0",
    "babel-loader": "^7.1.1",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "cross-env": "^7.0.2",
    "datatables.net-dt": "^1.10.20",
    "fuse.js": "^3.2.1",
    "inquirer": "^5.0.0",
    "jquery": "^3.5.0",
    "prompt": "^1.0.0",
    "react": "^15.6.1",
    "react-dom": "^15.6.1",
    "react-router": "^4.1.2",
    "react-router-dom": "^4.1.2",
    "shortid": "^2.2.8",
    "shx": "^0.3.2",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.1.1",
    "xml2js": "^0.4.17"
  },
  "devDependencies": {
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "css-loader": "^3.5.2",
    "fetch-retry": "^3.1.0",
    "isomorphic-fetch": "^2.2.1",
    "style-loader": "^1.1.4",
    "sync-rpc": "^1.3.6",
    "url-loader": "^4.1.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "rebuild-db-online": "cross-env MISSING_MEDIA=link node preprocessing/rebuild.js",
    "about:rebuild-db-online": "echo \"npm run rebuild-db-online - Rebuilds your LingView database, based on your ELAN, FLEx, and media files. You will need to run webpack afterwards. Use this version if some of your media files are on a remote server that your computer does not treat as part of its filesystem.\n\"",
    "rebuild-db-offline": "cross-env MISSING_MEDIA=ignore node preprocessing/rebuild.js",
    "about:rebuild-db-offline": "echo \"npm run rebuild-db-offline - Rebuilds your LingView database, based on your ELAN, FLEx, and media files. You will need to run webpack afterwards. Most people should use this version, not rebuild-db-online.\n\"",
    "webpack": "webpack-cli --config webpack.config.js",
    "about:webpack": "echo \"npm run webpack - Rebuild the bundle.js file based on your jsx files, to update the UI of the website.\n\"",
    "webpack-watch": "npm run webpack -- --watch --progress",
    "about:webpack-watch": "echo \"npm run webpack-watch - Rebuild the bundle.js file based on your jsx files, to update the UI of the website, then watch for additional changes and rebuild as needed.\n\"",
    "bundle": "shx rm -rf bundle/ && shx mkdir -p bundle/media_files/ && shx cp -r index.html build/ css/ data/media_files/ images/ bundle/",
    "about:bundle": "echo \"npm run bundle - If you want to give someone an offline copy of your LingView website, run this command, then send them the bundle directory. They can open its index.html file to view your site.\n\"",
    "build-linked": "npm run rebuild-db-online && npm run webpack && echo \"Done! index.html is ready. \nIf you want to send someone a copy of your LingView site that they can view offline, run npm run bundle.\n\"",
    "about:build-linked": "echo \"npm run build-linked - Rebuilds LingView, to incorporate any changes you have made to your ELAN, FLEx, media, and jsx files. Use this version if some of your media files are on a remote server that your computer does not treat as part of its filesystem.\n\"",
    "build": "npm run rebuild-db-offline && npm run webpack && echo \"Done! index.html is ready. \nIf you want to send someone a copy of your LingView site that they can view offline, run npm run bundle.\"",
    "about:build": "echo \"npm run build - Rebuilds LingView. Run this command after changing any ELAN, FLEx, media, or jsx files.\n\"",
    "about:edit": "echo \"node preprocessing/edit.js <unique_id> - Edits the author, title, etc. displayed for documents on your LingView site. Replace <unique_id> with the document ID, which is the last part of its URL in LingView. You will need to npm run build afterwards.\n\"",
    "about:delete": "echo \"node preprocessing/delete.js <unique_id> - Removes a document from your LingView site. Replace <unique_id> with the document ID, which is the last part of its URL in LingView. You will need to npm run build afterwards.\n\"",
    "help": "echo \"Thanks for using LingView! Here are some commands you might find useful.\" && echo \"\" && npm run -s about:build && npm run -s about:bundle && npm run -s about:edit && npm run -s about:delete"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BrownCLPS/LingView.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/BrownCLPS/LingView/issues"
  },
  "homepage": "https://github.com/BrownCLPS/LingView#readme",
  "private": true
}
